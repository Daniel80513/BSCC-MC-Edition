#!/bin/bash
DIR="/opt/BSCC/Files"
ALLTIME="$DIR/Alltimeusers.list"
ON="$DIR/onlineusers.list"
LOG="/opt/BSCC/minecraft_server/logs/latest.log"
LOG_DIR="/opt/BSCC/minecraft_server/logs/"

##Add random messages##
RANDOM_MSG() {
#Adding Random Message over just one welcome message.
	IFS=$'\r\n' command eval 'MSG=($(cat RandomMSG.txt))'
        GEN=$((RANDOM % ${#MSG[@]}))
        MSG=${MSG[$GEN]}
}


do_user() {
NAME=$(echo $USER | cut -d "=" -f1)
if [ $USER ]; then
RANDOM_MSG
        if [ "$(grep $USER $ALLTIME)" != $USER ]; then
                grep -q "$USER" "$ALLTIME" || echo "$USER" >> "$ALLTIME"
		grep -q "$NAME" "$ON" || echo "$NAME" >> "$ON"
		export NAME
                screen -S Minecraft -p 0 -X stuff "say Welcome to the server $NAME $(printf \\r)"
		./kit
else
		grep -q "$NAME" "$ON" || echo "$NAME" >> "$ON"
                screen -S Minecraft -p 0 -X stuff "tell $NAME $MSG $(printf \\r)"

 fi
fi
}

do_out() {
####change paths here####
if [ $LEFT ]; then
        if [ "$(grep $LEFT $ON)" != $ON ]; then
              sed -i -e '/'$LEFT'/d' $ON
   fi
fi
}

do_check() {
USER=$(tail -n 1 $LOG | grep -o "UUID of player.*" | awk '{print $4"="$6}')
LEFT=$(tail -n 1 $LOG | grep -o ".*left the game" | cut -d " " -f4)
if [ $USER ]; then
do_user
fi

if [ $LEFT ]; then
do_out
fi
}

###Check for Vanilla server###
VANILLA=$(cat conf.cfg | grep -o "VANILLA.*" | cut -d "=" -f2)
if [ $VANILLA = true ]; then
	if ! screen -list | grep -q "WATCH_LOGOUT"; then
		screen -dmS VANILLA_BACKUP ./vanilla_backup
	fi
fi

inotifywait -q -m "$LOG_DIR" --format '%w%f' -e modify,move| 
while read stats; do
do_check
done
